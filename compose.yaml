services:
  fridge.api:
    image: fridge.api
    depends_on:
      - database
      - service-bus
    environment:
      - ASPNETCORE_HTTP_PORTS=8081
      - ConnectionStrings__Database=$DATABASE_CONNECTION_STRING
      
      - JwtConfiguration__Authority=$JWT_AUTHORITY
      - JwtConfiguration__Audience=$JWT_AUDIENCE
      - JwtConfiguration__SecurityKey=$JWT_SECURITY_KEY
      
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin1234
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=admin1234
      - MINIO_SECRET_KEY=admin1234
      - MINIO_USE_SSL=false
      - MINIO_BUCKET_NAME=my-geladeira-remix-bucket
      
      - ServiceBusSettings__Username=guest
      - ServiceBusSettings__Password=guest
      - ServiceBusSettings__Port=5672
      - ServiceBusSettings__Hostname=service-bus
    ports:
      - $FRIDGE_API_EXTERNAL_PORT:8081
    build:
      context: .
      dockerfile: src/Presentation/Fridge.API/Dockerfile
    networks:
      default:

  statistic.api:
    image: statistic.api
    depends_on:
      - database
      - service-bus
    environment:
      - ASPNETCORE_HTTP_PORTS=8082
      
      - ConnectionStrings__Database=$DATABASE_CONNECTION_STRING
      
      - ServiceBusSettings__Username=guest
      - ServiceBusSettings__Password=guest
      - ServiceBusSettings__Port=5672
      - ServiceBusSettings__Hostname=service-bus
    ports:
      - $STATISTIC_API_EXTERNAL_PORT:8082
    build:
      context: .
      dockerfile: src/Presentation/Statistic.API/Dockerfile
    networks:
      default:
      
  user.service:
    image: user.service
    depends_on:
      - database
    environment:
      - ASPNETCORE_HTTP_PORTS=8083
      - ConnectionStrings__Database=$DATABASE_CONNECTION_STRING
      - DEFAULT_ADMIN_USER=$DEFAULT_ADMIN_USER
      - DEFAULT_ADMIN_PASSWORD=$DEFAULT_ADMIN_PASSWORD
    ports:
      - $USER_API_EXTERNAL_PORT:8083
    build:
      context: .
      dockerfile: src/Presentation/Identity/User.Service/Dockerfile
    networks:
      default:

  plan.service:
    image: plan.service
    depends_on:
      - database
    environment:
      - ASPNETCORE_HTTP_PORTS=8084
      - ConnectionStrings__Database=$DATABASE_CONNECTION_STRING
    ports:
      - $PLAN_API_EXTERNAL_PORT:8084
    build:
      context: .
      dockerfile: src/Presentation/Identity/Plan.Service/Dockerfile
    networks:
      default:

  identity.api:
    image: identity.api
    depends_on:
      - database
    environment:
      - ASPNETCORE_HTTP_PORTS=8085
      - ConnectionStrings__UserService=$CONNECTION_STRINGS_USERSERVICE
      - JwtConfiguration__Issuer=$JWT_ISSUER
      - JwtConfiguration__Authority=$JWT_AUTHORITY
      - JwtConfiguration__Audience=$JWT_AUDIENCE
      - JwtConfiguration__SecurityKey=$JWT_SECURITY_KEY
      - JwtConfiguration__ExpirationTimeInMinutes=$JWT_EXPIRATION_TIME_IN_MINUTES
    ports:
      - $IDENTITY_API_EXTERNAL_PORT:8085
    build:
      context: .
      dockerfile: src/Presentation/Identity/Identity.API/Dockerfile
    networks:
      default:

  database:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    
    volumes:
      - ./volumes/database:/var/lib/postgresql/data
    ports:
      - 5011:5432
    networks:
      default:
  
  service-bus:
    image: rabbitmq:3-management-alpine
    ports:
      - 5004:5672
      - 5005:15672
    volumes:
      - ./volumes/ServiceBus/data/:/var/lib/rabbitmq/
      - ./volumes/ServiceBus/log/:/var/log/rabbitmq
    
    networks:
      default:
        
        
  
  file.storage.service:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "8086:8086"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin1234
      - MINIO_ENDPOINT=minio:9000
#      - MINIO_ACCESS_KEY=admin1234
#      - MINIO_SECRET_KEY=admin1234
      - MINIO_USE_SSL=false
      - MINIO_BUCKET_NAME=my-geladeira-remix-bucket
    volumes:
      - ./volumes/minio:/var/lib/minio/data
    command: server /data --console-address ":8086"
    networks:
      default:
networks:
  default:
    driver: "bridge"